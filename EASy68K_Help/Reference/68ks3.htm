<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0054)http://technoplaza.suso.org/assembly/index.cgi?p=68ks3 -->
<HTML><HEAD><TITLE>Instruction Summary</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR>
<link href="edit68k.css" rel="stylesheet" type="text/css">
</HEAD>
<BODY bgColor=#ffffff>
<H1 class="heading">Instruction Summary<br>
    <hr noshade>
</H1>
<span class="text">The instructions are divided into 8 classes depending on how they work and what they do. Here is a short description of all instructions the Motorola 68000 will understand:<br>
</span><BR>
<span class="text"><A href="68ks4.htm">Data Movement</A></span><BR>
<span class="text"><A href="68ks5.htm">Integer Arithmetic</A></span><BR>
<span class="text"><A href="68ks6.htm">Logical Operations</A></span><BR>
<span class="text"><A href="68ks7.htm">Shift And Rotation</A></span><BR>
<span class="text"><A href="68ks8.htm">Bit Manipulation</A></span><BR>
<span class="text"><A href="68ks8z.htm">BCD Instructions</A></span><BR>
<span class="text"><A href="68ks9.htm">Program Control</A></span><BR>
<span class="text"><A href="68ks10.htm">System Control</A></span><BR>
<span class="text"><A href="68ks10z.htm">Other Instructions</A></span><BR>
<span class="subheading"> </span><span class="subheading"><BR>
</span>
<p class="text">All instructions are divided into 5 parts: a description, address methods, data length, flags, and syntax.<BR>
              <BR>
  The address method shows which operands are allowed. Often you can't combine different address methods with each other, but that is explained in the description.<BR>
              <BR>
  In data length you can see if you can use longwords, words or maybe only a byte. Some instructions can use words if you choose one address method, but you can use byte or longword if you choose another address method.<BR>
              <BR>
  The flags part shows how the flags are set after the instruction has been executed. It will be one of the following symbols </p>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="100%" class="text">
  <TBODY>
    <TR>
      <TD width="11%" class="text">S</TD>
      <TD width="89%" class="text">Standard setting - see below</TD>
    </TR>
    <TR>
      <TD width="11%" class="text">0</TD>
      <TD width="89%" class="text">The flag is always cleared</TD>
    </TR>
    <TR>
      <TD width="11%" class="text">1</TD>
      <TD width="89%" class="text">The flag is always set</TD>
    </TR>
    <TR>
      <TD width="11%" class="text">Undef</TD>
      <TD width="89%" class="text">Undefined - you can not be sure how the flag will be set</TD>
    </TR>
    <TR>
      <TD width="11%" class="text">U</TD>
      <TD width="89%" class="text">Unaffected - the flag does not change during the instruction</TD>
    </TR>
  </TBODY>
</TABLE>
<P align=left class="text">or a longer description, if it's a bit special.<BR>
    <BR>
  The Z, N and V flags are often set the same way (standard setting). The Z flag is usually set if the destination register (or the result) is zero, else the flag is cleared. The N flag is usually set if the most significant bit of the result is set (the most significant bit is the sign bit and shows if the number is negative or positive). The V flag is often set if the instruction resulted in an overflow (there weren't enough bits to store the answer in).<BR>
          <BR>
  Many instructions don't change any flags, then you'll see "Unaffected" directly after FLAGS.<BR>
          <BR>
  The syntax shows how the instructions can look like. Often, letters (x and y) is shown where there should be numbers between 0-7.<BR>
</P>
</BODY></HTML>
