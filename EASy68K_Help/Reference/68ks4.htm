<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0054)http://technoplaza.suso.org/assembly/index.cgi?p=68ks4 -->
<HTML><HEAD><TITLE>Data Movement</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR>
<link href="edit68k.css" rel="stylesheet" type="text/css">
</HEAD>
<BODY bgColor=#ffffff>
<DIV align=center>
<CENTER>
<TABLE border=0 borderColor=#008080 borderColorDark=#000080 
borderColorLight=#00ffff cellPadding=0 cellSpacing=0 width="100%">
  <TBODY>
  <TR>
    <TD vAlign=top width=800>
      <H1 class="heading">Data Movement<br><hr noshade>
      </H1>
      <P align=left><span class="text">These instructions move data from one place to another.</span> </P>
      <TABLE border=0 cellPadding=1 cellSpacing=0 class="text">
        <TBODY>
          <TR>
            <TD width="70"><A 
              href="68ks4a.htm">EXG</A></TD>
            <TD width="520">The contents of two registers will be exchanged.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4b.htm">LEA</A></TD>
            <TD>Calculates a memory location and stores it into an address register.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4c.htm">LINK</A></TD>
            <TD>Allocates a stack frame.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4d.htm">MOVE</A></TD>
            <TD>Copies the contents in one register/memory location into another register/memory location.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4e.htm">MOVEA</A></TD>
            <TD>Same as MOVE except that the destination is an address-register.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4f.htm">MOVEM</A></TD>
            <TD>transfers many registers to or from the memory.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4g.htm">MOVEP</A></TD>
            <TD>transfers data to or from an 8 bit peripheral unit.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4h.htm">MOVEQ</A></TD>
            <TD>puts a constant in a data register.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4i.htm">PEA</A></TD>
            <TD>calculates a memory address and stores it on the stack.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4j.htm">SWAP</A></TD>
            <TD>Swaps the low and high words in a data register.</TD>
          </TR>
          <TR>
            <TD><A 
              href="68ks4k.htm">UNLK</A></TD>
            <TD>removes a stack frame</TD>
          </TR>
        </TBODY>
      </TABLE>
      <P align=left><span class="subheading"><A name=intarith></A></span>
      <H3 align=left>&nbsp;      </H3>
        <P><BR>
          <BR>
          </BLOCKQUOTE>
          <!-- TITUTOR -->
        </P>
        </TD>
    <TD width=15>&nbsp;</TD></TR></TBODY></TABLE></CENTER></DIV>
<DIV align=center></DIV>
<DIV align=center class="text"><CENTER>
</CENTER>
</DIV></BODY></HTML>
