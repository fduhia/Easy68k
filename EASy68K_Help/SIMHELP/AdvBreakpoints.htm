<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">
<link href="../edit68k.css" rel="stylesheet" type="text/css">
<title>Advanced Breakpoints</title>
<base target="_self">
</head>

<body>

<h1 class="heading"><font size="4">Sim68K - Advanced Breakpoints</font><hr noshade></h1>
<p class="text">To cause your program to Break on special conditions, use the Advanced Break Point features.</p>
<p class="text">To access these features, click the View Menu and select Break
Points.</p>
<p class="text"><img border="0" src="IMAGES/Breakpt/ViewBreakptmenu.gif"></p>
<p class="text">A window similar to the following will appear:</p>
<p class="text"><img border="0" src="IMAGES/Breakpt/AdvBreakScr.gif"></p>

<p class="subheading">&nbsp;</p>

<p class="subheading">===Setting-up conditions===</p>

<p class="text">To begin setting up a condition, double click on an empty line
in either the <b> Registers</b> or <b>Memory</b> section.</p>

<p class="text"><img border="0" src="IMAGES/Breakpt/AdvRegSection.gif"></p>

<p class="text">Once clicked, the line will fill in with numerous drop-down and
input boxes.</p>

<p class="text">&nbsp;</p>

<p class="text"><b>=Columns in the Registers section=</b></p>

<p class="text">The <b>PC/Reg</b> column specifies the register to be tested.</p>

<p class="text">The <b>Op</b> selection sets the type of comparison. (greater than,
less than, equal to, etc.)</p>

<p class="text">The <b>Value </b>selection sets the value to be compared to the
register.</p>

<p class="text">The <b>Size</b>  specifies the size for the comparison. (byte, word, or
longword)</p>
<p class="text">&nbsp;</p>
<p class="text"><b>=Columns in the Memory section=</b></p>

<p class="text">The <b>Address</b> selection specifies address in memory to be
tested.</p>

<p class="text">The <b>Op</b> selection sets the type of comparison. (greater than,
less than, equal to, etc.)&nbsp; NOTE: The <b>N/A </b>selection causes the
comparison to <u>always</u> be true.</p>

<p class="text">The <b>Value </b>selection sets the value to be compared to the
location in memory.</p>

<p class="text">The <b>Size</b>  specifies the size for the comparison. (byte, word, or
longword)</p>
<p class="text">The <b>R/W </b>selection has four choices:</p>
<p class="text">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>R/W - </b>Break will only occur on read or
write while the comparison is true.</p>
<p class="text">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Read</b> - Break will only occur on
read and when comparison is true.</p>
<p class="text">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Write</b> - Break
will only occur on write and when comparison is true.</p>
<p class="text">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>N/A</b> - Break
will occur if comparison is true.</p>
<p class="text">&nbsp;</p>
<p class="text"><b>After you have finished inputting information, you must hit
the SET button, or the line you just inputted will be deleted.</b></p>
<p class="text">
<img border="0" src="IMAGES/Breakpt/AdvHitSet.GIF" width="291" height="271"></p>
<p class="text"><b>Also, once you have done these steps, your Break Points are
NOT functional.&nbsp; You must use the conditions you have created in the
Expression Builder to activate them.</b></p>
<p class="text"><b>&nbsp;</b></p>
<p class="subheading">===Using the Expression Builder===</p>
<p class="text">To begin creating an expression, double-click on an empty row.</p>
<p class="subheading">
<img border="0" src="IMAGES/Breakpt/ClickExpressBuild.GIF" width="673" height="251"></p>
<p class="text"><b>=Columns in the Expression Builder=</b></p>

<p class="text">Set the <b>Enabled </b>column to <b>On</b> to activate the Break
Point.&nbsp; Set it to <b>Off </b>to prevent the Break Point from
occurring.</p>

<p class="text">The <b>Expression </b>column stores an expression containing the
conditions you created earlier along with optional logical operators.&nbsp; These
conditions and optional logical operators are entered by clicking the <b>PC/Reg</b>,
<b>Memory</b>, <b>And</b>, <b>Or</b>, <b>(</b>, and <b>)</b> buttons which are
described below.</p>

<p class="text">The <b>Count </b>column specifies how many times the expression
must be true before breaking.</p>

<p class="text">&nbsp;</p>

<p class="text"><b>=Expression buttons=</b></p>

<p class="text"><b>PC/Reg - </b>Inserts a condition defined earlier in the <b>Registers</b>
section into the current position in the <b>Expression </b>column.&nbsp; The
number of the condition inserted is specified by the digits to the right of the
button.</p>

<p class="text"><b>Memory - </b>Inserts a condition defined earlier in the <b>Memory</b>
section into the current position in the <b>Expression </b>column.&nbsp; The
number of the condition inserted is specified by the digits to the right of the
button.</p>

<p class="text"><b>And </b>/<b> Or </b>buttons<b> </b>- Inserts a logical
operator into the <b>Expression </b>column.</p>

<p class="text"><b>(&nbsp; </b>/&nbsp; <b>) </b>buttons - Groups part(s) of an
expression together.</p>

<p class="text"><b>Backspace</b> - Removes the last change made to the current <b>Expression</b>.</p>

<p class="text">&nbsp;</p>

<p class="text">=<b>Finalizing Expression Builder=</b></p>

<p class="text"><b>After you have finished inputting information, you must hit
the SET button, or the line you just inputted will be deleted.</b></p>
<p class="text">Now, your Break Points are active as long as you have set the <b>Enabled</b>
column to <b>On.&nbsp; </b>You may change information in the <b>Registers</b>, <b>Memory</b>,
or <b>Expression Builder</b> sections by double clicking on the line you want to
change.</p>

</body>

</html>